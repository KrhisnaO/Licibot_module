# Generated by Django 5.0.3 on 2024-06-18 05:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vista', models.CharField(max_length=200, verbose_name='Tipo de Vista')),
                ('descripcion', models.TextField(verbose_name='Descripción del Error')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
            ],
            options={
                'verbose_name': 'Historial de Errores',
                'verbose_name_plural': 'Historial de Errores',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Preguntasbbdd',
            fields=[
                ('idPreguntas', models.AutoField(primary_key=True, serialize=False, verbose_name='Id de pregunta')),
                ('nombrePregunta', models.CharField(max_length=80, verbose_name='Texto de la pregunta')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Licitacion',
            fields=[
                ('idLicitacion', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='ID de licitación')),
                ('nombreLicitacion', models.CharField(max_length=200, verbose_name='Nombre de la licitación')),
                ('descripcionLicitacion', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Descripción de la licitación')),
                ('archivoLicitacion', models.FileField(blank=True, null=True, upload_to='licitacion/', verbose_name='Archivo de la licitación')),
                ('fechaCierre', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de cierre')),
                ('estado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado')),
                ('nombreOrganismo', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del organismo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('subido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='licitaciones_subidas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textoRespuesta', models.TextField(verbose_name='Texto de la respuesta')),
                ('licitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.licitacion', verbose_name='Licitación')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.preguntasbbdd', verbose_name='Pregunta')),
            ],
        ),
    ]
